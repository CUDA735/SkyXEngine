
/*
mtrltp_base.ps
Рендер прозрачной геометрии
*/

#include "../struct.h"
#include "../mtrl.h"

//##########################################################################

SamplerState g_sScene: register(s0);
Texture2D g_txColor: register(t0);		// basetexture
Texture2D g_txParameters: register(t10);		// basetexture

//##########################################################################

// half4 g_vNearFarLayers;
#include "../const.h"

cbuffer CDataClipPlanes: register(b6)
{
	float4 g_vClipPlanes[4];
};

//##########################################################################

float4 main(VSO_SceneCommon IN):COLOR0
{
	// ClipFar(IN.vPos.z, g_vNearFarLayers.y);
	// IN.vNormal = normalize(IN.vNormal);
	
	float3 vPos = IN.vPos.xyz / IN.vPos.w;
	[unroll]for(uint i = 0; i < 4; ++i)
	{
		float4 vPlane = g_vClipPlanes[i];
		clip(dot(vPlane.xyz, vPos) + vPlane.w);
	}
		
	return(g_txColor.Sample(g_sScene, IN.vTexUV));
		
	/* return(CreateGbuffer(
		float4(g_txColor.Sample(g_sScene, IN.vTexUV).xyz, 0.0f), 
		IN.vNormal, 
		g_txParameters.Sample(g_sScene, IN.vTexUV), 
		IN.vPos, 
		g_vNearFarLayers
	)); */
}
