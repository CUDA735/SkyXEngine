
/*
gbuffer.ps

*/

#include "../../struct.h"
#include "../../mtrl.h"
#include "../../const.h"

//##########################################################################

// SamplerState g_sScene: register(s0);
// Texture2D g_txColor: register(t0);		// basetexture
// Texture2D g_txParameters: register(t10);
XMAT_MS_TEXTURES();
XMAT_MS_SAMPLERS();

struct XMaterial
{
	XMATERIAL_OUTPUT_STRUCT();
};
XMATERIAL_DEFAULT_LOADER();

struct PSI_XMaterial
{
	XMAT_PS_STRUCT();
};

//##########################################################################

#include XMATERIAL_SHADER

//##########################################################################

PSO_Gbuffer main(PSI_XMaterial IN)
{
	// ClipFar(IN.vPos.z, g_vNearFarLayers.y);
	IN.vNormal = normalize(IN.vNormal);
	
	XMaterial mtrl = XMATERIAL_MAIN(IN);
		
	return(CreateGbuffer(
		float4(mtrl.vBaseColor, 0.0), 
		mtrl.vNormal, 
		float4(mtrl.fRoughness,
			mtrl.fMetallic,
			mtrl.fThickness,
			mtrl.fAO), 
		IN.vPos, 
		g_vNearFarLayers
	));
}
