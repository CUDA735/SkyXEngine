
/*
ppgensm_direct.ps
Генерация теней для локального направленного света
*/

#include <../struct.h>
#include <../shadow.h>
#include <../mtrl.h>
#include <../ps.h>

//##########################################################################

half3 g_vPosCam;
half2 g_vPixelSize;
half3 g_vSizeMapBias;
half4x4	g_mMatrixTexture;

//##########################################################################

sampler2D g_sDepthView:register(s0);
sampler2D g_sDepthShadow:register(s1);

//##########################################################################

half4 main(VSO_ResPos IN):COLOR0
{
	half fShadow = 0.0f;

	half fDepth = tex2D(g_sDepthView,IN.vTexUV).r;
	half4 vPixelPos = half4(g_vPosCam + IN.vWorldRay * fDepth,1.f);
	half4 vTexCoord	= mul(vPixelPos, g_mMatrixTexture);
	vTexCoord.xyz = vTexCoord.xyz / vTexCoord.w;
	
	[branch]if(!(vTexCoord.x <= 1.f && vTexCoord.y <= 1.f && vTexCoord.x >= 0.f && vTexCoord.y >= 0.f))
		clip(-1);
	
	fShadow += ShadowCalcShading(tex2D(g_sDepthShadow, vTexCoord.xy).x, vTexCoord.z, g_vSizeMapBias.z);
	fShadow += ShadowCalcShading(tex2D(g_sDepthShadow, vTexCoord.xy + half2(0, g_vPixelSize.y)).x, vTexCoord.z, g_vSizeMapBias.z);
	fShadow += ShadowCalcShading(tex2D(g_sDepthShadow, vTexCoord.xy + half2(g_vPixelSize.x, 0)).x, vTexCoord.z, g_vSizeMapBias.z);
	fShadow += ShadowCalcShading(tex2D(g_sDepthShadow, vTexCoord.xy + half2(g_vPixelSize.x, g_vPixelSize.y)).x, vTexCoord.z, g_vSizeMapBias.z);

	fShadow *= 0.25;

	return saturate(fShadow);
} 