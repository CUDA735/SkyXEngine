
/*
ppgensm_direct.ps
Генерация теней для локального направленного света
*/

#include <../struct.h>
#include <../shadow.h>
#include <../mtrl.h>
#include <../ps.h>

//##########################################################################

cbuffer perFrame: register(b1)
{
	half3 g_vPosCam;
};

cbuffer perShadow: register(b6)
{
	half4x4	g_mMatrixTexture;
	// half4 g_vPixelSize;
	// half3 g_vSizeMapBias;
	half3 vPixelMapSizeBias;
};



//##########################################################################

SamplerState g_sPointClamp: register(s0);
SamplerState g_sLinearClamp: register(s1);
// SamplerState g_sPointWrap: register(s2);

Texture2D g_txDepthView: register(t0);
Texture2D g_txDepthShadow: register(t1);

//##########################################################################

half4 main(VSO_ResPos IN):COLOR0
{
	half fShadow = 0.0f;
	
	//g_txDepthView.Sample(g_sPointClamp, IN.vTexUV)
	//g_txDepthShadow.Sample(g_sLinearClamp, IN.vTexUV)
	
	half fDepth = g_txDepthView.Sample(g_sPointClamp, IN.vTexUV).r;
	half4 vPixelPos = half4(g_vPosCam + IN.vWorldRay * fDepth,1.f);
	half4 vTexCoord	= mul(vPixelPos, g_mMatrixTexture);
	vTexCoord.xyz = vTexCoord.xyz / vTexCoord.w;
	
	[branch]if(!(vTexCoord.x <= 1.f && vTexCoord.y <= 1.f && vTexCoord.x >= 0.f && vTexCoord.y >= 0.f))
		clip(-1);
	
	fShadow += ShadowCalcShading(g_txDepthShadow.Sample(g_sLinearClamp, vTexCoord.xy).x, vTexCoord.z, vPixelMapSizeBias.z);
	fShadow += ShadowCalcShading(g_txDepthShadow.Sample(g_sLinearClamp, vTexCoord.xy + half2(0, vPixelMapSizeBias.x)).x, vTexCoord.z, vPixelMapSizeBias.z);
	fShadow += ShadowCalcShading(g_txDepthShadow.Sample(g_sLinearClamp, vTexCoord.xy + half2(vPixelMapSizeBias.x, 0)).x, vTexCoord.z, vPixelMapSizeBias.z);
	fShadow += ShadowCalcShading(g_txDepthShadow.Sample(g_sLinearClamp, vTexCoord.xy + half2(vPixelMapSizeBias.x, vPixelMapSizeBias.x)).x, vTexCoord.z, vPixelMapSizeBias.z);

	#ifdef GSD_9
	fShadow += ShadowCalcShading(g_txDepthShadow.Sample(g_sLinearClamp, vTexCoord.xy + half2(-vPixelMapSizeBias.x, 0)).x, vTexCoord.z, vPixelMapSizeBias.z);
	fShadow += ShadowCalcShading(g_txDepthShadow.Sample(g_sLinearClamp, vTexCoord.xy + half2(vPixelMapSizeBias.x, -vPixelMapSizeBias.x)).x, vTexCoord.z, vPixelMapSizeBias.z);
	fShadow += ShadowCalcShading(g_txDepthShadow.Sample(g_sLinearClamp, vTexCoord.xy + half2(-vPixelMapSizeBias.x, vPixelMapSizeBias.x)).x, vTexCoord.z, vPixelMapSizeBias.z);
	fShadow += ShadowCalcShading(g_txDepthShadow.Sample(g_sLinearClamp, vTexCoord.xy + half2(0, -vPixelMapSizeBias.x)).x, vTexCoord.z, vPixelMapSizeBias.z);
	fShadow += ShadowCalcShading(g_txDepthShadow.Sample(g_sLinearClamp, vTexCoord.xy + half2(-vPixelMapSizeBias.x, -vPixelMapSizeBias.x)).x, vTexCoord.z, vPixelMapSizeBias.z);

	fShadow *= 0.111;
	#else
	fShadow *= 0.25;
	#endif

	return saturate(fShadow);
} 