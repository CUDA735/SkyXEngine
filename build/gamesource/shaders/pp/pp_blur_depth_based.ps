
/*
pp_blur_depth_based.ps
Размытие с учетом глубины
*/

#include <../struct.h>
#include <../mtrl.h>

//##########################################################################

sampler2D g_sDepth:register(s0);
sampler2D g_sBlur:register(s1);

//##########################################################################

half4 g_vPixelSize;
half2 g_vNearFar;

//##########################################################################

half4 main(VSO_PP IN) : COLOR0
{
	half2 vCenterTC = IN.vTexUV;

	half fSumWeight = 0.125f;
	half4 vColor = tex2D(g_sBlur, vCenterTC) * fSumWeight;

	half vCenterDepth = tex2D(g_sDepth, vCenterTC).r * g_vNearFar.y;

	[unroll]
	for(half x=-1; x<=1; x++)
	{
		[unroll]
		for(half y=-1; y<=1; y++)
		{
			half2 vSampleTC = vCenterTC + half2(x * g_vPixelSize.x,y * g_vPixelSize.y);
			half fDepth = tex2D(g_sDepth, vSampleTC).r;
			fDepth *= g_vNearFar.y;
			half fDiff = 9.0f*(1.0f - fDepth/vCenterDepth);
			half fWeight = saturate(0.5 - 0.75f*abs(fDiff) - 0.25f*(fDiff));
			vColor += tex2D(g_sBlur, vSampleTC) * fWeight;
			fSumWeight += fWeight;
		}
	}

	vColor /= fSumWeight;
	return vColor;
}