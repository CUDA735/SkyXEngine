
/*
particles_main.ps
Рендер партиклов
*/

#include <../struct.h>

sampler2D BaseSampler:register(s0);
sampler2D DepthSampler:register(s1);
sampler2D SceneSampler:register(s2);

half RefractCoef;
half SoftCoef;
half ColorCoef;
half2 NearFar;

half4 main(vs_out_particles IN):COLOR0
{
	half4 color = tex2D(BaseSampler,IN.TexUV);
	color.rgb *= ColorCoef;
	color.a *= IN.Alpha.x;
	#if defined(PART_SOFT) || defined(PART_REFRACTION)
	half2 texuv = IN.Pos.xy / IN.Pos.w;
	texuv.x = texuv.x * 0.5f + 0.5f;
	texuv.y = texuv.y * (-0.5f) + 0.5f;
	#endif
	
	#if defined(PART_SOFT)
	half depthmap = tex2D(DepthSampler,texuv);
	half curdepth = IN.Pos.z / NearFar.y;
	
	color.a *= saturate((depthmap - curdepth)*NearFar.y)*SoftCoef;
	#endif
	
	#if defined(PART_REFRACTION)
	texuv.x += sin(color.a*0.1)*RefractCoef;
	texuv.y += cos(color.a*0.1)*RefractCoef;
	
	half4 colorscene = tex2D(SceneSampler,texuv);
	
	color.rgb = colorscene.rgb;
	color.a = color.a*2.f;
	#endif

	#if defined(PART_LIGHT)
	color *= IN.Light;
	#endif
	
	return color;
}