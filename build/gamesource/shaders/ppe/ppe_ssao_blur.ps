
/*
ppe_ssao_blur.ps
Размытие ssao (результата просчета) и повторное размытие со смешиванием со сценой.
Размытие с учетом линейной глубины.
*/

#include <../struct.h>
#include <../mtrl.h>

//##########################################################################

half4 g_vPixelSize;
half2 g_vNearFar;

//##########################################################################

sampler2D g_sDepth:register(s0);
sampler2D g_sBlur:register(s1);
sampler2D g_sColor:register(s2);

//##########################################################################

half4 main(VSO_PP IN) : COLOR0
{
	half2 vCenterTC = IN.vTexUV;

	half fSumWeight = 0.125f;
	half4 vColor = tex2D(g_sBlur, vCenterTC) * fSumWeight;

	half fCenterDepth = tex2D(g_sDepth, vCenterTC).r * g_vNearFar.y;

	[unroll]
	for(half x=-2;x<=2;x++)
	{
		[unroll]
		for(half y=-2;y<=2;y++)
		{
			half2 SampleTC = vCenterTC + half2(x * g_vPixelSize.x,y * g_vPixelSize.y);
			half fDepth = tex2D(g_sDepth, SampleTC).r;
			fDepth *= g_vNearFar.y;
			half fDiff = 9.0 * (1.0 - fDepth/fCenterDepth);
			half Weight = saturate(0.5 - 0.75 * abs(fDiff) - 0.25 * (fDiff));
			vColor += tex2D(g_sBlur,SampleTC) * Weight;
			fSumWeight += Weight;
		}
	}

	vColor /= fSumWeight;
	
	#if defined(_BLEND_COLOR_)
	half4 ScreenColor = tex2D(g_sColor,IN.vTexUV);
	return ScreenColor * saturate(vColor.r);
	#else
	return saturate(vColor);
	#endif
}