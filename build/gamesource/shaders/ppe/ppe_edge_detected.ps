
/*
ppe_edge_detected.ps
выделение границ
*/

#include <../struct.h>

#define DLAA_MUL_VAL 0.333

sampler2D Texture0:register(s0);

half2 PixelSize;

half4 main(vs_out_pp IN) : COLOR0
{
   /*half4 Center		= tex2D(Texture0, IN.TexUV);
   half4 UpLeft		= tex2D(Texture0, IN.TexUV + half2(-0.5, -0.5) * PixelSize);
   half4 UpRight	= tex2D(Texture0, IN.TexUV + half2( 0.5, -0.5) * PixelSize);
   half4 DownLeft	= tex2D(Texture0, IN.TexUV + half2(-0.5,  0.5) * PixelSize);
   half4 DownRight	= tex2D(Texture0, IN.TexUV + half2( 0.5,  0.5) * PixelSize);
 
   half4 diff		= abs(((UpLeft + UpRight + DownLeft + DownRight) * 4.0) - (Center * 16.0));
   half edgeMask	= dot(diff.xyz, DLAA_MUL_VAL);

   return half4(Center.rgb, edgeMask);*/
   
	half fDepthCenter = tex2D(Texture0, IN.TexUV);
	half fDepthUpLeft		= tex2D(Texture0, IN.TexUV + half2(-1, -1) * PixelSize);
	half fDepthUpRight		= tex2D(Texture0, IN.TexUV + half2( 1, -1) * PixelSize);
	half fDepthDownLeft		= tex2D(Texture0, IN.TexUV + half2(-1,  1) * PixelSize);
	half fDepthDownRight	= tex2D(Texture0, IN.TexUV + half2( 1,  1) * PixelSize);
	
	half diff		= abs(((fDepthUpLeft + fDepthUpRight + fDepthDownLeft + fDepthDownRight)*0.25f) - (fDepthCenter));
	half edgeMask	= step(lerp(0.00001f, 0.001f, fDepthCenter), diff);//dot(diff.xyz, DLAA_MUL_VAL);

	return edgeMask;
}
