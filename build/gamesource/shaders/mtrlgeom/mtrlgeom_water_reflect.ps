
/*
mtrlgeom_water_reflect.ps
Рендер воды (геометрии) с плоским отражением
*/

#include <../struct.h>
#include <../mtrl.h>
 
half2 WinSize;
half4 Param;		
//x - коэфициент смещения текстурных координат 
//y - коэфициент прозрачности
//z - коэфициент микрорельефа
//w - коэфициент смешивания между отражением и основной текстурой (чем больше тем больше будет преобладать цвет основной текстуры, чем меньше тем больше будет преобладать цвет отражения)

half4 NearFarIsUnlit;

sampler2D BaseTex:register(s0);		//основная текстура
sampler2D DUDVTex:register(s2);		//текстура смещений координат
sampler2D NormalTex:register(s6);	//текстура нормалей
sampler2D ParamTex:register(s10);	//параметры для освещения
sampler2D ReflectTex:register(s12);	//текстура отражений того что над водой, рефлексия
sampler2D DepthTex:register(s14);	//текстура глубины

ps_out_ds_mrt main(vs_out_water IN)
{	
	ClipFar(IN.Pos.z,NearFarIsUnlit.y);
	
	ps_out_ds_mrt OUT;
	
	half3 normal1 = 2.0f * tex2D(NormalTex, IN.Tex2.xy) - 1.0f;
	half3 normal2 = 2.0f * tex2D(NormalTex, IN.Tex3.xy*0.5) - 1.0f;
	normal1.z = IN.Normal.z;
	normal2.z = IN.Normal.z;
	normal1 *= Param.z;
	normal2 *= Param.z;
	half3 normal = normalize((normal1+normal2+IN.Normal));
	
	OUT.Normal.xyz = 0.5f * normal + 0.5;
	OUT.Normal.w = NearFarIsUnlit.z;
	
	half3 tc_offset = 2.0f * tex2D(DUDVTex,IN.Tex2.xy) - 1.0f;
	half3 tc_offset2= 2.0f * tex2D(DUDVTex,IN.Tex3.xy*0.5) - 1.0f;
	half3 normaloffset = normalize(tc_offset+tc_offset2)*Param.x;

	half4 TexUVRefractProj = mul(IN.Pos,MatrixRefraction);
	half depth = LinearizeDepth(tex2D(DepthTex, TexUVRefractProj.xy/TexUVRefractProj.w + half2(0.5f/WinSize.x,0.5f/WinSize.y)).r, NearFarIsUnlit.xy);
	half intens = saturate(abs(((IN.Pos.z/NearFarIsUnlit.y) - depth)*NearFarIsUnlit.y) / (Param.y * 100.f));
	
	normaloffset *= intens;
	
	half4 tpos = IN.Pos;
	tpos.xyz += normaloffset;
	IN.TexUV += normaloffset.xy*0.1f;
	half4 colorbase = tex2D(BaseTex, IN.TexUV);
	
	OUT.Param = tex2D(ParamTex,IN.TexUV);
	OUT.Param.w = NearFarIsUnlit.w;
	
	half MipmapIndex = lerp(0.f, MTRL_REF_LOD_COUNT, saturate(OUT.Param.r - 0.1f));
	half4 TexUVReflectProj = mul(tpos,MatrixReflection);
	half4 reflection = tex2Dlod(ReflectTex, half4(TexUVReflectProj.xy/TexUVReflectProj.w,0,MipmapIndex));
	colorbase = lerp(reflection,colorbase,Param.w);
	
	OUT.Color.rgb = colorbase.rgb;
	OUT.Color.a = intens;
	
	OUT.Depth = GetDepthW(IN.Pos,NearFarIsUnlit.xy);
	
	return OUT;
}